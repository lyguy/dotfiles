#!/bin/sh

# add .local/bin to path
if [ -d "$HOME/.local/bin" ]; then
    export PATH="$HOME/.local/bin:$PATH"
fi

# Set up OPAM
if [ -f "$HOME/.opam/opam-init/init.sh" ]; then
    #shellcheck source=/dev/null
    . "$HOME/.opam/opam-init/init.sh" > /dev/null 2> /dev/null || true
    eval "$(opam config env)"
fi

# Rust cargo bins
if [ -d "$HOME/.cargo/bin/" ]; then
    export PATH="$HOME/.cargo/bin:$PATH"
    RUST_SRC_PATH="$(rustc --print sysroot)/lib/rustlib/src/rust/src"
    export RUST_SRC_PATH
fi

# Go
if [ -d "${HOME}/go" ]; then
    export GOPATH="${HOME}/go"
    export PATH="/usr/local/go/bin:${GOPATH}/bin:${PATH}"
fi

# Google Cloud
# The next line updates PATH for the Google Cloud SDK.
file="${HOME}/google-cloud-sdk/path.${SHELL}.inc"
if [ -f "${file}" ]; then
    #shellcheck source=/dev/null
    . "${file}"
fi

# The next line enables shell command completion for gcloud.
file="${HOME}/google-cloud-sdk/completion.${SHELL}.inc"
if [ -f "${file}" ]; then
    #shellcheck source=/dev/null
    . "${file}"
fi

# PG 11
pg_version=14
dir="${HOMEBREW_PREFIX}/opt/postgresql@${pg_version}/bin"
if [ -d "${dir}" ]; then
    export PATH="${dir}:$PATH"
fi
# Alternatively
dir="/Applications/Postgres.app/Contents/Versions/${pg_version}/bin/"
if [ -d "${dir}" ]; then
    export PATH="${dir}:$PATH"
fi

# Emacs
dir="${HOME}/.emacs.d/bin"
if [ -d "${dir}" ]; then
    export PATH="${dir}:${PATH}"
fi

# ASDF
file="${HOMEBREW_PREFIX}/opt/asdf/libexec/asdf.sh"
if [ -f "${file}" ]; then
    #shellcheck source=/dev/null
    . "${file}"
fi

# PyEnc
export PYENV_ROOT="$HOME/.pyenv"
command -v pyenv >/dev/null || export PATH="$PYENV_ROOT/bin:$PATH"
eval "$(pyenv init -)"
eval "$(pyenv virtualenv-init -)"


# # Conda
# file="${HOMEBREW_PREFIX}/bin/conda"
# if [ -f "${file}" ]; then
# # >>> conda initialize >>>
# # !! Contents within this block are managed by 'conda init' !!
# __conda_setup="$('/opt/homebrew/Caskroom/miniconda/base/bin/conda' 'shell.bash' 'hook' 2> /dev/null)"
# if [ $? -eq 0 ]; then
#     eval "$__conda_setup"
# else
#     if [ -f "/opt/homebrew/Caskroom/miniconda/base/etc/profile.d/conda.sh" ]; then
#         source "/opt/homebrew/Caskroom/miniconda/base/etc/profile.d/conda.sh"
#     else
#         export PATH="/opt/homebrew/Caskroom/miniconda/base/bin:$PATH"
#     fi
# fi
# unset __conda_setup
# # <<< conda initialize <<<
# fi